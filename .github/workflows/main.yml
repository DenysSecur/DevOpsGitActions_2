name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk

env:
  EB_PACKAGE_S3_BUCKET_NAME: "denys-flask-application-packages"
  EB_APPLICATION_NAME: "MyFlask"
  EB_ENVIRONMENT_NAME: "MyFlask-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-1"

on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create ZIP deployment package
        run: |
          # show what we include (debug)
          ls -la
          # create zip, исключаем .git
          zip -r "${{ env.DEPLOY_PACKAGE_NAME }}" ./ -x "*.git*" 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRETS }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Debug AWS CLI and environment
        run: |
          aws --version
          echo "Using region: $AWS_REGION"
          echo "Package: ${{ env.DEPLOY_PACKAGE_NAME }}"

      - name: Copy deployment package to S3 bucket
        run: aws s3 cp "${{ env.DEPLOY_PACKAGE_NAME }}" "s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/"

      - name: Print CI finished message
        run: echo "CI Pipeline part finished successfully!!!!!"

  my_cd_part:
    needs: [my_ci_part]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRETS }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ env.EB_APPLICATION_NAME }}" \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"

      - name: Deploy new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.EB_ENVIRONMENT_NAME }}" \
            --version-label "Ver-${{ github.sha }}"

      - name: Print CD finished message
        run: echo "CD Pipeline part finished successfully!"
